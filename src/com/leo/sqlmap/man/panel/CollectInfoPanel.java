package com.leo.sqlmap.man.panel;

import com.intellij.ide.util.TreeClassChooser;
import com.intellij.ide.util.TreeClassChooserFactory;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.Messages;
import com.intellij.openapi.vfs.LocalFileSystem;
import com.intellij.psi.PsiClass;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.leo.sqlmap.man.generator.SqlMapGenerator;
import com.leo.sqlmap.man.generator.impl.DefaultSqlMapGenerator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

/**
 * @author Leo.yy   Created on 15/7/10.
 * @description
 * @see
 */
public class CollectInfoPanel extends JPanel {


    private final Project project;

    private JTextField classNameField;
    private JTextField tableNameField;
    private JButton chooseBtn;
    private JButton submitBtn;
    private JPanel mainPanel;




    private SqlMapGenerator sqlMapGenerator = new DefaultSqlMapGenerator();
    private PsiClass entityClass;
    private JFrame frame = new JFrame("SqlMapGenerator");


    public CollectInfoPanel(Project project) {

        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        //Add content to the window.
        frame.add(CollectInfoPanel.this);
        //Display the window.
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setLocation(dim.width / 2 - frame.getSize().width / 2, dim.height / 2 - frame.getSize().height / 2);



        this.project = project;

        chooseBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                TreeClassChooserFactory factory = TreeClassChooserFactory.getInstance(CollectInfoPanel.this.project);
                TreeClassChooser chooser = factory.createProjectScopeChooser(null, null);
                chooser.showDialog();
                PsiClass psiClass = chooser.getSelected();
                classNameField.setText(psiClass.getQualifiedName());
                entityClass = psiClass;
                // show again
                showInCenter();

            }
        });


        submitBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String className = classNameField.getText();
                if (className == null || className.length() == 0) {
                    showErrorMessage("实体类名不能为空!");
                    return;
                }
                String tableName = tableNameField.getText();
                if (tableName == null || tableName.length() == 0) {
                    showErrorMessage("表名不能为空!");
                    return;
                }

                try {
                    String outputPath = sqlMapGenerator.generateSqlMap(entityClass, tableName);
                    showResultMsg("生成SqlMap成功,文件位置:" + outputPath);
                    frame.setVisible(false);
                    LocalFileSystem fs = LocalFileSystem.getInstance();
                    fs.refreshAndFindFileByIoFile(new File(outputPath));
                } catch (Exception e1) {
                    showErrorMessage("生成sqlMap异常:" + e1.getMessage());
                }



            }
        });

        add(mainPanel);
    }

    private void showErrorMessage(String msg) {
        Messages.showMessageDialog(

                msg,

                "错误",

                Messages.getInformationIcon()

        );
    }

    private void showResultMsg(String msg) {
        Messages.showMessageDialog(

                msg,

                "提示",

                Messages.getInformationIcon()

        );
    }

    public void showInCenter()
    {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                //Turn off metal's use of bold fonts
                UIManager.put("swing.boldMetal", Boolean.FALSE);


                frame.pack();


                frame.setVisible(true);


            }
        });

    }

    private void closePanel() {

    }

    {

// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:d:grow", "top:47px:noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        CellConstraints cc = new CellConstraints();
        mainPanel.add(panel1, cc.xy(1, 1, CellConstraints.LEFT, CellConstraints.CENTER));
        final JLabel label1 = new JLabel();
        label1.setText("实体类：");
        panel1.add(label1);
        classNameField = new JTextField();
        classNameField.setPreferredSize(new Dimension(140, 28));
        classNameField.setText("");
        panel1.add(classNameField);
        chooseBtn = new JButton();
        chooseBtn.setText("选择");
        panel1.add(chooseBtn);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel2, cc.xy(1, 5));
        submitBtn = new JButton();
        submitBtn.setText("提交");
        panel2.add(submitBtn, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        mainPanel.add(panel3, cc.xy(1, 3, CellConstraints.LEFT, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setText("表名：");
        panel3.add(label2);
        tableNameField = new JTextField();
        tableNameField.setPreferredSize(new Dimension(140, 28));
        panel3.add(tableNameField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
